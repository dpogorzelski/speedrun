syntax = "proto3";
option go_package = "github.com/speedrunsh/speedrun/proto/portal";
package portal;

enum State {
    CHANGED = 0;
    UNCHANGED = 1;
    STATELESS = 2;
    UNKNOWN = 3;
}

message CommandRequest {
  string name = 1;
  repeated string args = 2;
}

message CommandResponse {
  State state= 1;
  string message = 2;
}

message ServiceRequest {
  string name = 1;
}

message ServiceResponse {
  State state= 1;
  string message = 2;
}

message ServiceStatusResponse {
  State state= 1;
	string loadstate=2;             // The load state (i.e. whether the unit file has been loaded successfully)
	string activestate=3;           // The active state (i.e. whether the unit is currently started or not)
	string substate=4;              // The sub state (a more fine-grained version of the active state that is specific to the unit type, which the active state is not)
}

service Portal{
  rpc ServiceRestart(ServiceRequest) returns (ServiceResponse) {}
  rpc ServiceStart(ServiceRequest) returns (ServiceResponse) {}
  rpc ServiceStop(ServiceRequest) returns (ServiceResponse) {}
  rpc ServiceStatus(ServiceRequest) returns (ServiceStatusResponse) {}
  rpc RunCommand(CommandRequest) returns (CommandResponse) {}
  // rpc EnsureMountedDisk()
}